# move window
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# split window
bind s split-window -v
bind v split-window -h

# vi-style controls for copy mode
set-window-option -g mode-keys vi
set-window-option -g status-keys emacs
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.6" | bc) -eq 1 ]' \
  'bind-key -Tcopy-mode-vi "v" send -X begin-selection; bind-key -Tcopy-mode-vi "y" send -X copy-selection' \
  'bind-key -t vi-copy "v" begin-selection; bind-key -t vi-copy "y" copy-selection'

# change prefix key
unbind C-b
set-option -g prefix 'C-q'
bind q send-keys C-q
bind C-q last-window

# set first window to 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# correct term for 256 colours
set-option -g default-terminal "screen-256color"

# sync panes
bind C-s set-window-option synchronize-panes

# address vim mode switching delay
set-option -s escape-time 0

# aggressive resize
setw -g aggressive-resize on

# increase scrollback buffer size
set-option -g history-limit 50000

# don't output gibberish to the terminal
set-option -s set-clipboard off

# activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity on

# automatic naming of windows
set-window-option -g allow-rename off

# pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# only tmux 1.9 has the -c option
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 1.9" | bc) -eq 1 ]' \
  'bind s split-window -v -c "#{pane_current_path}"; bind v split-window -h -c "#{pane_current_path}"; bind c new-window -c "#{pane_current_path}"'

# enable mouse features for terminals that support it
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.1" | bc) -eq 1 ]' \
  'set -g mouse on' \
  'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on; bind m set -g mode-mouse on \; set -g mouse-resize-pane on \; set -g mouse-select-pane on \; set -g mouse-select-window on'

# Clipboard support
if-shell 'test "$(uname -s)" = Darwin' \
  'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
if-shell 'test "$(uname -s)" = Darwin' \
  'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"' \
  'bind C-c run "tmux save-buffer - | xclip -i -selection clipboard > /dev/null"'
if-shell 'test "$(uname -s)" = Darwin' \
  'bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"' \
  'bind C-v run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"'

# tmux-plugins
# run-shell ~/.tmux/plugins/tmux-logging/logging.tmux
